// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: transactions_service.proto

package transactions_service

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FetchByCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username   string               `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password   string               `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	CardNumber string               `protobuf:"bytes,3,opt,name=cardNumber,proto3" json:"cardNumber,omitempty"`
	StartDate  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate    *timestamp.Timestamp `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *FetchByCredentialsRequest) Reset() {
	*x = FetchByCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchByCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchByCredentialsRequest) ProtoMessage() {}

func (x *FetchByCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchByCredentialsRequest.ProtoReflect.Descriptor instead.
func (*FetchByCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_transactions_service_proto_rawDescGZIP(), []int{0}
}

func (x *FetchByCredentialsRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FetchByCredentialsRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *FetchByCredentialsRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *FetchByCredentialsRequest) GetStartDate() *timestamp.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *FetchByCredentialsRequest) GetEndDate() *timestamp.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type FetchFromBytesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardNumber string               `protobuf:"bytes,1,opt,name=cardNumber,proto3" json:"cardNumber,omitempty"`
	Data       []byte               `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	StartDate  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate    *timestamp.Timestamp `protobuf:"bytes,4,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *FetchFromBytesRequest) Reset() {
	*x = FetchFromBytesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchFromBytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchFromBytesRequest) ProtoMessage() {}

func (x *FetchFromBytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchFromBytesRequest.ProtoReflect.Descriptor instead.
func (*FetchFromBytesRequest) Descriptor() ([]byte, []int) {
	return file_transactions_service_proto_rawDescGZIP(), []int{1}
}

func (x *FetchFromBytesRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *FetchFromBytesRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FetchFromBytesRequest) GetStartDate() *timestamp.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *FetchFromBytesRequest) GetEndDate() *timestamp.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckInInfo            string                `protobuf:"bytes,1,opt,name=checkInInfo,proto3" json:"checkInInfo,omitempty"`
	CheckInText            string                `protobuf:"bytes,2,opt,name=checkInText,proto3" json:"checkInText,omitempty"`
	Fare                   *wrappers.DoubleValue `protobuf:"bytes,3,opt,name=fare,proto3" json:"fare,omitempty"`
	FareCalculation        string                `protobuf:"bytes,4,opt,name=fareCalculation,proto3" json:"fareCalculation,omitempty"`
	FareText               string                `protobuf:"bytes,5,opt,name=fareText,proto3" json:"fareText,omitempty"`
	ModalType              string                `protobuf:"bytes,6,opt,name=modalType,proto3" json:"modalType,omitempty"`
	ProductInfo            string                `protobuf:"bytes,7,opt,name=productInfo,proto3" json:"productInfo,omitempty"`
	ProductText            string                `protobuf:"bytes,8,opt,name=productText,proto3" json:"productText,omitempty"`
	Pto                    string                `protobuf:"bytes,9,opt,name=pto,proto3" json:"pto,omitempty"`
	TransactionDateTime    *timestamp.Timestamp  `protobuf:"bytes,10,opt,name=transactionDateTime,proto3" json:"transactionDateTime,omitempty"`
	TransactionInfo        string                `protobuf:"bytes,11,opt,name=transactionInfo,proto3" json:"transactionInfo,omitempty"`
	TransactionName        string                `protobuf:"bytes,12,opt,name=transactionName,proto3" json:"transactionName,omitempty"`
	EPurseMut              *wrappers.DoubleValue `protobuf:"bytes,13,opt,name=ePurseMut,proto3" json:"ePurseMut,omitempty"`
	EPurseMutInfo          string                `protobuf:"bytes,14,opt,name=ePurseMutInfo,proto3" json:"ePurseMutInfo,omitempty"`
	TransactionExplanation string                `protobuf:"bytes,15,opt,name=transactionExplanation,proto3" json:"transactionExplanation,omitempty"`
	TransactionPriority    string                `protobuf:"bytes,16,opt,name=transactionPriority,proto3" json:"transactionPriority,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_transactions_service_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetCheckInInfo() string {
	if x != nil {
		return x.CheckInInfo
	}
	return ""
}

func (x *Transaction) GetCheckInText() string {
	if x != nil {
		return x.CheckInText
	}
	return ""
}

func (x *Transaction) GetFare() *wrappers.DoubleValue {
	if x != nil {
		return x.Fare
	}
	return nil
}

func (x *Transaction) GetFareCalculation() string {
	if x != nil {
		return x.FareCalculation
	}
	return ""
}

func (x *Transaction) GetFareText() string {
	if x != nil {
		return x.FareText
	}
	return ""
}

func (x *Transaction) GetModalType() string {
	if x != nil {
		return x.ModalType
	}
	return ""
}

func (x *Transaction) GetProductInfo() string {
	if x != nil {
		return x.ProductInfo
	}
	return ""
}

func (x *Transaction) GetProductText() string {
	if x != nil {
		return x.ProductText
	}
	return ""
}

func (x *Transaction) GetPto() string {
	if x != nil {
		return x.Pto
	}
	return ""
}

func (x *Transaction) GetTransactionDateTime() *timestamp.Timestamp {
	if x != nil {
		return x.TransactionDateTime
	}
	return nil
}

func (x *Transaction) GetTransactionInfo() string {
	if x != nil {
		return x.TransactionInfo
	}
	return ""
}

func (x *Transaction) GetTransactionName() string {
	if x != nil {
		return x.TransactionName
	}
	return ""
}

func (x *Transaction) GetEPurseMut() *wrappers.DoubleValue {
	if x != nil {
		return x.EPurseMut
	}
	return nil
}

func (x *Transaction) GetEPurseMutInfo() string {
	if x != nil {
		return x.EPurseMutInfo
	}
	return ""
}

func (x *Transaction) GetTransactionExplanation() string {
	if x != nil {
		return x.TransactionExplanation
	}
	return ""
}

func (x *Transaction) GetTransactionPriority() string {
	if x != nil {
		return x.TransactionPriority
	}
	return ""
}

type TransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *TransactionsResponse) Reset() {
	*x = TransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsResponse) ProtoMessage() {}

func (x *TransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsResponse.ProtoReflect.Descriptor instead.
func (*TransactionsResponse) Descriptor() ([]byte, []int) {
	return file_transactions_service_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionsResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_transactions_service_proto protoreflect.FileDescriptor

var file_transactions_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x19,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x22, 0xbb, 0x01, 0x0a, 0x15, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22,
	0xab, 0x05, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x04, 0x66, 0x61, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x61, 0x72, 0x65, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x66, 0x61, 0x72, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x61, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x61, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x74, 0x6f, 0x12,
	0x4c, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3a, 0x0a, 0x09, 0x65, 0x50, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x75, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x65, 0x50, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x75, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x65, 0x50, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x50, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x75, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x55, 0x0a,
	0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x32, 0xd7, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x12,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x12, 0x27, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x18,
	0x5a, 0x16, 0x2e, 0x3b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transactions_service_proto_rawDescOnce sync.Once
	file_transactions_service_proto_rawDescData = file_transactions_service_proto_rawDesc
)

func file_transactions_service_proto_rawDescGZIP() []byte {
	file_transactions_service_proto_rawDescOnce.Do(func() {
		file_transactions_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_transactions_service_proto_rawDescData)
	})
	return file_transactions_service_proto_rawDescData
}

var file_transactions_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_transactions_service_proto_goTypes = []interface{}{
	(*FetchByCredentialsRequest)(nil), // 0: transactions.FetchByCredentialsRequest
	(*FetchFromBytesRequest)(nil),     // 1: transactions.FetchFromBytesRequest
	(*Transaction)(nil),               // 2: transactions.Transaction
	(*TransactionsResponse)(nil),      // 3: transactions.TransactionsResponse
	(*timestamp.Timestamp)(nil),       // 4: google.protobuf.Timestamp
	(*wrappers.DoubleValue)(nil),      // 5: google.protobuf.DoubleValue
}
var file_transactions_service_proto_depIdxs = []int32{
	4,  // 0: transactions.FetchByCredentialsRequest.startDate:type_name -> google.protobuf.Timestamp
	4,  // 1: transactions.FetchByCredentialsRequest.endDate:type_name -> google.protobuf.Timestamp
	4,  // 2: transactions.FetchFromBytesRequest.startDate:type_name -> google.protobuf.Timestamp
	4,  // 3: transactions.FetchFromBytesRequest.endDate:type_name -> google.protobuf.Timestamp
	5,  // 4: transactions.Transaction.fare:type_name -> google.protobuf.DoubleValue
	4,  // 5: transactions.Transaction.transactionDateTime:type_name -> google.protobuf.Timestamp
	5,  // 6: transactions.Transaction.ePurseMut:type_name -> google.protobuf.DoubleValue
	2,  // 7: transactions.TransactionsResponse.transactions:type_name -> transactions.Transaction
	0,  // 8: transactions.TransactionsService.FetchByCredentials:input_type -> transactions.FetchByCredentialsRequest
	1,  // 9: transactions.TransactionsService.FetchFromBytes:input_type -> transactions.FetchFromBytesRequest
	3,  // 10: transactions.TransactionsService.FetchByCredentials:output_type -> transactions.TransactionsResponse
	3,  // 11: transactions.TransactionsService.FetchFromBytes:output_type -> transactions.TransactionsResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_transactions_service_proto_init() }
func file_transactions_service_proto_init() {
	if File_transactions_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transactions_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchByCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchFromBytesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transactions_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transactions_service_proto_goTypes,
		DependencyIndexes: file_transactions_service_proto_depIdxs,
		MessageInfos:      file_transactions_service_proto_msgTypes,
	}.Build()
	File_transactions_service_proto = out.File
	file_transactions_service_proto_rawDesc = nil
	file_transactions_service_proto_goTypes = nil
	file_transactions_service_proto_depIdxs = nil
}
