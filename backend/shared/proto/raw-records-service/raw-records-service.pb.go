// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: raw-records-service/raw-records-service.proto

package raw_records_service

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	"github.com/AchoArnold/ov-chipkaart-dashboard/backend/shared/proto/transactions-service"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RawRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckInInfo            string                `protobuf:"bytes,1,opt,name=checkInInfo,proto3" json:"checkInInfo,omitempty"`
	CheckInText            string                `protobuf:"bytes,2,opt,name=checkInText,proto3" json:"checkInText,omitempty"`
	Fare                   *wrappers.DoubleValue `protobuf:"bytes,3,opt,name=fare,proto3" json:"fare,omitempty"`
	FareCalculation        string                `protobuf:"bytes,4,opt,name=fareCalculation,proto3" json:"fareCalculation,omitempty"`
	FareText               string                `protobuf:"bytes,5,opt,name=fareText,proto3" json:"fareText,omitempty"`
	ModalType              string                `protobuf:"bytes,6,opt,name=modalType,proto3" json:"modalType,omitempty"`
	ProductInfo            string                `protobuf:"bytes,7,opt,name=productInfo,proto3" json:"productInfo,omitempty"`
	ProductText            string                `protobuf:"bytes,8,opt,name=productText,proto3" json:"productText,omitempty"`
	Pto                    string                `protobuf:"bytes,9,opt,name=pto,proto3" json:"pto,omitempty"`
	TransactionDateTime    *timestamp.Timestamp  `protobuf:"bytes,10,opt,name=transactionDateTime,proto3" json:"transactionDateTime,omitempty"`
	TransactionInfo        string                `protobuf:"bytes,11,opt,name=transactionInfo,proto3" json:"transactionInfo,omitempty"`
	TransactionName        string                `protobuf:"bytes,12,opt,name=transactionName,proto3" json:"transactionName,omitempty"`
	EPurseMut              *wrappers.DoubleValue `protobuf:"bytes,13,opt,name=ePurseMut,proto3" json:"ePurseMut,omitempty"`
	EPurseMutInfo          string                `protobuf:"bytes,14,opt,name=ePurseMutInfo,proto3" json:"ePurseMutInfo,omitempty"`
	TransactionExplanation string                `protobuf:"bytes,15,opt,name=transactionExplanation,proto3" json:"transactionExplanation,omitempty"`
	TransactionPriority    string                `protobuf:"bytes,16,opt,name=transactionPriority,proto3" json:"transactionPriority,omitempty"`
	CreatedAt              *timestamp.Timestamp  `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt              *timestamp.Timestamp  `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Source                 string                `protobuf:"bytes,19,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *RawRecord) Reset() {
	*x = RawRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raw_records_service_raw_records_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawRecord) ProtoMessage() {}

func (x *RawRecord) ProtoReflect() protoreflect.Message {
	mi := &file_raw_records_service_raw_records_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawRecord.ProtoReflect.Descriptor instead.
func (*RawRecord) Descriptor() ([]byte, []int) {
	return file_raw_records_service_raw_records_service_proto_rawDescGZIP(), []int{0}
}

func (x *RawRecord) GetCheckInInfo() string {
	if x != nil {
		return x.CheckInInfo
	}
	return ""
}

func (x *RawRecord) GetCheckInText() string {
	if x != nil {
		return x.CheckInText
	}
	return ""
}

func (x *RawRecord) GetFare() *wrappers.DoubleValue {
	if x != nil {
		return x.Fare
	}
	return nil
}

func (x *RawRecord) GetFareCalculation() string {
	if x != nil {
		return x.FareCalculation
	}
	return ""
}

func (x *RawRecord) GetFareText() string {
	if x != nil {
		return x.FareText
	}
	return ""
}

func (x *RawRecord) GetModalType() string {
	if x != nil {
		return x.ModalType
	}
	return ""
}

func (x *RawRecord) GetProductInfo() string {
	if x != nil {
		return x.ProductInfo
	}
	return ""
}

func (x *RawRecord) GetProductText() string {
	if x != nil {
		return x.ProductText
	}
	return ""
}

func (x *RawRecord) GetPto() string {
	if x != nil {
		return x.Pto
	}
	return ""
}

func (x *RawRecord) GetTransactionDateTime() *timestamp.Timestamp {
	if x != nil {
		return x.TransactionDateTime
	}
	return nil
}

func (x *RawRecord) GetTransactionInfo() string {
	if x != nil {
		return x.TransactionInfo
	}
	return ""
}

func (x *RawRecord) GetTransactionName() string {
	if x != nil {
		return x.TransactionName
	}
	return ""
}

func (x *RawRecord) GetEPurseMut() *wrappers.DoubleValue {
	if x != nil {
		return x.EPurseMut
	}
	return nil
}

func (x *RawRecord) GetEPurseMutInfo() string {
	if x != nil {
		return x.EPurseMutInfo
	}
	return ""
}

func (x *RawRecord) GetTransactionExplanation() string {
	if x != nil {
		return x.TransactionExplanation
	}
	return ""
}

func (x *RawRecord) GetTransactionPriority() string {
	if x != nil {
		return x.TransactionPriority
	}
	return ""
}

func (x *RawRecord) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RawRecord) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *RawRecord) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type StoreTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions     []*transactions_service.Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Source           string                              `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	AnalyzeRequestId string                              `protobuf:"bytes,3,opt,name=analyzeRequestId,proto3" json:"analyzeRequestId,omitempty"`
}

func (x *StoreTransactionsRequest) Reset() {
	*x = StoreTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raw_records_service_raw_records_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTransactionsRequest) ProtoMessage() {}

func (x *StoreTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raw_records_service_raw_records_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTransactionsRequest.ProtoReflect.Descriptor instead.
func (*StoreTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_raw_records_service_raw_records_service_proto_rawDescGZIP(), []int{1}
}

func (x *StoreTransactionsRequest) GetTransactions() []*transactions_service.Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *StoreTransactionsRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *StoreTransactionsRequest) GetAnalyzeRequestId() string {
	if x != nil {
		return x.AnalyzeRequestId
	}
	return ""
}

type FetchByRequestIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
}

func (x *FetchByRequestIdRequest) Reset() {
	*x = FetchByRequestIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raw_records_service_raw_records_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchByRequestIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchByRequestIdRequest) ProtoMessage() {}

func (x *FetchByRequestIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raw_records_service_raw_records_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchByRequestIdRequest.ProtoReflect.Descriptor instead.
func (*FetchByRequestIdRequest) Descriptor() ([]byte, []int) {
	return file_raw_records_service_raw_records_service_proto_rawDescGZIP(), []int{2}
}

func (x *FetchByRequestIdRequest) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

type FetchByRequestIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawRecords []*RawRecord `protobuf:"bytes,1,rep,name=rawRecords,proto3" json:"rawRecords,omitempty"`
}

func (x *FetchByRequestIdResponse) Reset() {
	*x = FetchByRequestIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raw_records_service_raw_records_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchByRequestIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchByRequestIdResponse) ProtoMessage() {}

func (x *FetchByRequestIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raw_records_service_raw_records_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchByRequestIdResponse.ProtoReflect.Descriptor instead.
func (*FetchByRequestIdResponse) Descriptor() ([]byte, []int) {
	return file_raw_records_service_raw_records_service_proto_rawDescGZIP(), []int{3}
}

func (x *FetchByRequestIdResponse) GetRawRecords() []*RawRecord {
	if x != nil {
		return x.RawRecords
	}
	return nil
}

var File_raw_records_service_raw_records_service_proto protoreflect.FileDescriptor

var file_raw_records_service_raw_records_service_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x72, 0x61, 0x77, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x61, 0x77, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x06, 0x0a,
	0x09, 0x52, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x30,
	0x0a, 0x04, 0x66, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x66, 0x61, 0x72, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x66, 0x61, 0x72, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x61, 0x72, 0x65, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61,
	0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61,
	0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x74, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x74, 0x6f, 0x12, 0x4c, 0x0a, 0x13, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x65, 0x50, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x65,
	0x50, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x50, 0x75, 0x72,
	0x73, 0x65, 0x4d, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x50, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36,
	0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70,
	0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x61,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x18, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x17, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x22, 0x53, 0x0a,
	0x18, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x61, 0x77,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x32, 0xcf, 0x01, 0x0a, 0x11, 0x52, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x42, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x42, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x72, 0x61, 0x77, 0x2d, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x72, 0x61, 0x77, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_raw_records_service_raw_records_service_proto_rawDescOnce sync.Once
	file_raw_records_service_raw_records_service_proto_rawDescData = file_raw_records_service_raw_records_service_proto_rawDesc
)

func file_raw_records_service_raw_records_service_proto_rawDescGZIP() []byte {
	file_raw_records_service_raw_records_service_proto_rawDescOnce.Do(func() {
		file_raw_records_service_raw_records_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_raw_records_service_raw_records_service_proto_rawDescData)
	})
	return file_raw_records_service_raw_records_service_proto_rawDescData
}

var file_raw_records_service_raw_records_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_raw_records_service_raw_records_service_proto_goTypes = []interface{}{
	(*RawRecord)(nil),                        // 0: transactions.RawRecord
	(*StoreTransactionsRequest)(nil),         // 1: transactions.StoreTransactionsRequest
	(*FetchByRequestIdRequest)(nil),          // 2: transactions.FetchByRequestIdRequest
	(*FetchByRequestIdResponse)(nil),         // 3: transactions.FetchByRequestIdResponse
	(*wrappers.DoubleValue)(nil),             // 4: google.protobuf.DoubleValue
	(*timestamp.Timestamp)(nil),              // 5: google.protobuf.Timestamp
	(*transactions_service.Transaction)(nil), // 6: transactions.Transaction
	(*empty.Empty)(nil),                      // 7: google.protobuf.Empty
}
var file_raw_records_service_raw_records_service_proto_depIdxs = []int32{
	4, // 0: transactions.RawRecord.fare:type_name -> google.protobuf.DoubleValue
	5, // 1: transactions.RawRecord.transactionDateTime:type_name -> google.protobuf.Timestamp
	4, // 2: transactions.RawRecord.ePurseMut:type_name -> google.protobuf.DoubleValue
	5, // 3: transactions.RawRecord.createdAt:type_name -> google.protobuf.Timestamp
	5, // 4: transactions.RawRecord.updatedAt:type_name -> google.protobuf.Timestamp
	6, // 5: transactions.StoreTransactionsRequest.transactions:type_name -> transactions.Transaction
	0, // 6: transactions.FetchByRequestIdResponse.rawRecords:type_name -> transactions.RawRecord
	2, // 7: transactions.RawRecordsService.FetchByRequestId:input_type -> transactions.FetchByRequestIdRequest
	1, // 8: transactions.RawRecordsService.StoreTransactions:input_type -> transactions.StoreTransactionsRequest
	3, // 9: transactions.RawRecordsService.FetchByRequestId:output_type -> transactions.FetchByRequestIdResponse
	7, // 10: transactions.RawRecordsService.StoreTransactions:output_type -> google.protobuf.Empty
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_raw_records_service_raw_records_service_proto_init() }
func file_raw_records_service_raw_records_service_proto_init() {
	if File_raw_records_service_raw_records_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_raw_records_service_raw_records_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raw_records_service_raw_records_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raw_records_service_raw_records_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchByRequestIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raw_records_service_raw_records_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchByRequestIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_raw_records_service_raw_records_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_raw_records_service_raw_records_service_proto_goTypes,
		DependencyIndexes: file_raw_records_service_raw_records_service_proto_depIdxs,
		MessageInfos:      file_raw_records_service_raw_records_service_proto_msgTypes,
	}.Build()
	File_raw_records_service_raw_records_service_proto = out.File
	file_raw_records_service_raw_records_service_proto_rawDesc = nil
	file_raw_records_service_raw_records_service_proto_goTypes = nil
	file_raw_records_service_raw_records_service_proto_depIdxs = nil
}
